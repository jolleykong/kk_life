'''
Python编程知识-弟弟的作业


你的弟弟刚做完了“100以内数的加减法”这部分的作业，请你帮他检查一下。
每道题目（包括弟弟的答案）的格式为a+b=c或者a-b=c，其中a和b是作业中给出的，均为不超过100的非负整数；c是弟弟算出的答案，可能是不超过200的非负整数，也可能是单个字符”?”,表示他不会算。

输入 输入文件的第一行只有一个数字T(1 <= T <= 1000)，表示下面有T个算术运算，
接下来有T行，每行包含一道题目，格式有以下4种情况： 
    a+b=c a-b=c a+b=? a-b=? 
其中0 <= b <= a <= 100，0 <= c <= 200，且不包含任何空白字符。
输入的所有整数均不含前导0。

输出 输出仅一行一个数字，表示”a+b=c”和”a-b=c”中计算正确的个数。

样例 输入样例 4 1+2=3 3-1=5 6+7=? 99-0=99 输出样例 2
代码实现

请在下面 cell 中编写代码，实现题目描述的要求。

'''
import re
# ipt = input('输入作业：').strip()
ipt='1+2=3 3-1=5 6+7=? 99-0=99'

li = ipt.split(' ')

result = 0
# print(li)
for kv in li:
    # 分隔算式
    # print(re.findall('\d{1,3}\+?\-?\d{1,3}\=\d{1,3}',kv))
    # 生成的是一个包含tuple的list，因为把每一个等式元素都拆开了，这种方式倒是不错。所以取下标0，转为tuple。
    one = re.findall('(\d{1,3})(\+?\-?)(\d{1,3})(\=)(\d+|\?)',kv)[0]
    # print(one)
    # one = one[0]
    # 如果有=?的情况，说明没做，直接跳过就好。这样也避免下面int() 报错。
    if one[4].isdigit():
        # 只找到了eval() ， exec()在这场景下并不能满足需求。 如果等式成立，结果记录+1。
        if  eval(one[0]+one[1]+one[2]) == int(one[4]) :
            result += 1

print(result)

# 考虑一下能否注入eval()？ 好像不行， 前面正则已经过滤为只保留数字了。
# 如果是文件的话， 那就每一行这样处理一下。 可以封装成函数~

